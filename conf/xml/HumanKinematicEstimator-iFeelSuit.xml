<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE robot PUBLIC "-//YARP//DTD yarprobotinterface 3.0//EN" "http://www.yarp.it/DTD/yarprobotinterfaceV3.0.dtd">
<robot name="Human-HDE" build=0 portprefix="">

    <device type="iwear_remapper" name="iFeelSuitIWearRemapper">
        <param name="wearableDataPorts">(/iFeelSuit/WearableData/data:o)</param>
        <param name="useRPC">false</param>
        <param name="wearableRPCPorts">(/iFeelSuit/WearableData/metadataRpc:o)</param>
        <param name="outputPortName">/HDE/XsensIWearRemapper/data:o</param>
    </device>

    <device type="human_kinematic_estimator" name="HumanKinematicEstimator">
        <param name="period">0.01</param>
        <param name="urdf">humanSubject08_48dof.urdf</param>
<!--         <param name="urdf">humanSubject02_66dof.urdf</param> -->
        <param name="floatingBaseFrame">Pelvis</param>
        <!-- ikSolver options: pairwised, global, integrationbased -->
        <param name="ikSolver">integrationbased</param>
        <param name="useXsensJointsAngles">false</param>
        <param name="allowIKFailures">true</param>
        <param name="useDirectBaseMeasurement">false</param>
        <!-- baseState options: standard, direct, fixed, external -->
        <param name="baseState">external</param>
        <!-- optimization parameters -->
        <param name="maxIterationsIK">300</param>
        <param name="ikLinearSolver">ma27</param>
        <param name="ikPoolSizeOption">2</param>
        <param name="posTargetWeight">0.0</param>
        <param name="rotTargetWeight">1.0</param>
        <param name="costRegularization">0.000001</param>
        <param name="costTolerance">0.001</param>
        <!-- inverse velocity kinematics parameters -->
        <!-- inverseVelocityKinematicsSolver values:
        QP
        moorePenrose,
        completeOrthogonalDecomposition,
        leastSquare,
        choleskyDecomposition,
        sparseCholeskyDecomposition,
        robustCholeskyDecomposition,
        sparseRobustCholeskyDecomposition -->
        <param name="inverseVelocityKinematicsSolver">robustCholeskyDecomposition</param>
        <param name="linVelTargetWeight">0.0</param>
        <param name="angVelTargetWeight">1.0</param>
        <!-- integration based IK parameters -->
        <param name='integrationBasedJointVelocityLimit'>15.0</param> <!-- comment or -1.0 for no limits -->
        <param name="integrationBasedIKMeasuredVelocityGainLinRot">(1.0 1.0)</param>
        <param name="integrationBasedIKCorrectionGainsLinRot">(8.0 20.0)</param>
        <param name="integrationBasedIKIntegralCorrectionGainsLinRot">(0.0 0.0)</param>
        <group name="MODEL_TO_DATA_LINK_NAMES">
            <param name="map_Pelvis">(Pelvis, iFeelSuit::vLink::Node#7)</param>
            <param name="map_RightUpperLeg">(RightUpperLeg, iFeelSuit::vLink::Node#9)</param>
            <param name="map_RightLowerLeg">(RightLowerLeg, iFeelSuit::vLink::Node#10)</param>
            <param name="map_RightFoot">(RightFoot, iFeelSuit::vLink::Node#11)</param>
            <param name="map_LeftUpperLeg">(LeftUpperLeg, iFeelSuit::vLink::Node#6)</param>
            <param name="map_LeftLowerLeg">(LeftLowerLeg, iFeelSuit::vLink::Node#5)</param>
            <param name="map_LeftFoot">(LeftFoot, iFeelSuit::vLink::Node#4)</param>
        </group>


        <!-- Begin BipedalLocomotionFramework components configuration -->
        <group name="ModelInfo">
            <param name="base_link">Pelvis</param>
            <!-- BLF estimators are base-link IMU centric for model computations,
                 only the outputs are transformed to base link.
                 since it is a required parameter, we can use the same frames for both -->
            <param name="base_link_imu">Pelvis</param>
            <!-- These are required parameters for model configuration,
                 eventhough they are unused by BLF LeggedOdom -->
            <param name="left_foot_contact_frame">LeftFoot</param>
            <param name="right_foot_contact_frame">RightFoot</param>
        </group>
        <group name="LeggedOdom">
            <!-- This configuration  must be carried out internally
                  once the kinematic calibration is performes-->
            <param name="initial_fixed_frame">LeftFoot</param>
            <param name="initial_ref_frame_for_world">Pelvis</param>
            <!-- quaternion w x y z -->
            <param name="initial_world_orientation_in_ref_frame">(1., 0., 0., 0.)</param>
            <param name="initial_world_position_in_ref_frame">(0., 0., 0.)</param>
            <param name="switching_pattern">latest</param>
            <param name="vel_computation_method">single</param>
        </group>
        <group name="SchmittTriggerParams">
            <param name="contacts">(LeftToe, RightToe)</param>
<!--            <param name="contact_make_thresholds">(400.0, 400.0)</param>
            <param name="contact_break_thresholds">(350.0, 350.0)</param>-->
            <param name="contact_make_thresholds">(200.0, 200.0)</param>
            <param name="contact_break_thresholds">(50.0, 70.0)</param>
            <param name="contact_make_switch_times">(0.01, 0.01)</param>
            <param name="contact_break_switch_times">(0.01, 0.01)</param>
        </group>
        <group name="ContactBayesFilter">
            <param name="verbose">false</param>
            <!-- if set to false, we need to provide the urdf_mesh_files_prefix
                 for loading the meshes specified in the urdf model-->
            <param name="no_collision_meshes">true</param>
            <!-- links for which collision elements will be used for contact detection-->
            <param name="contact_links">(LeftFoot, RightFoot)</param>
        </group>
        <!-- End BipedalLocomotionFramework components configuration -->

        <action phase="startup" level="6" type="attach">
            <paramlist name="networks">
                <elem name="HumanStateProviderLabel">iFeelSuitIWearRemapper</elem>
                <elem name="HumanDynamicsEstimatorLabel2">HumanWrenchProvider</elem>
            </paramlist>
        </action>
        <action phase="shutdown" level="5" type="detach"/>
    </device>

    <!-- Uncomment to stream the output of HumanStateProvider on a YARP port -->
    <device type="human_state_wrapper" name="HumanStateWrapper">
        <param name="period">0.02</param>
        <param name="outputPort">/HDE/HumanStateWrapper/state:o</param>
        <action phase="startup" level="5" type="attach">
            <paramlist name="networks">
                <elem name="HumanStateWrapperLabel">HumanKinematicEstimator</elem>
            </paramlist>
        </action>
        <action phase="shutdown" level="5" type="detach"/>
    </device>

    <device type="human_state_publisher" name="HumanStatePublisher">
        <param name="period">0.02</param>
        <param name="baseTFName">/Human/Pelvis</param>
        <param name="humanJointsTopic">/Human/joint_states</param>
        <action phase="startup" level="5" type="attach">
            <paramlist name="networks">
                <elem name="HumanStatePublisherLabel">HumanKinematicEstimator</elem>
            </paramlist>
        </action>
        <action phase="shutdown" level="5" type="detach"/>
    </device>

    <device type="human_wrench_provider" name="HumanWrenchProvider">
        <param name="period">0.100</param>
        <param name="human_urdf">humanSubject02_66dof.urdf</param>
        <param name="pHRIScenario">false</param>
        <param name="number_of_sources">2</param>
        <param name="sources">(iFeelSuit::ft6D::Node#1 iFeelSuit::ft6D::Node#2)</param>
        <group name="iFeelSuit::ft6D::Node#1">
            <param name="sensorName">iFeelSuit::ft6D::Node#1</param>
            <param name="outputFrame">LeftFoot</param>
            <param name="type">fixed</param>
            <param name="rotation">(1.0 0.0 0.0
                                    0.0 1.0 0.0
                                    0.0 0.0 1.0)</param>
            <param name="position">(0.0 0.0 0.0)</param>
        </group>
        <group name="iFeelSuit::ft6D::Node#2">
            <param name="sensorName">iFeelSuit::ft6D::Node#2</param>
            <param name="outputFrame">RightFoot</param>
            <param name="type">fixed</param>
            <param name="rotation">(1.0 0.0 0.0
                                    0.0 1.0 0.0
                                    0.0 0.0 1.0)</param>
            <param name="position">(0.0 0.0 0.0)</param>
        </group>
        <action phase="startup" level="5" type="attach">
            <paramlist name="networks">
                 <elem name="HumanWrenchProviderLabelFTShoeLeft">iFeelSuitIWearRemapper</elem>
            </paramlist>
        </action>
        <action phase="shutdown" level="5" type="detach" />
    </device>

        <!--Wrapper to publish WrenchStamped message to Rviz-->
    <device type="analogServer" name="HumanWrenchPublisher">
        <param name="name">/HDE/HumanWrenchPublisher/wrench:o</param>
        <param name="period">20</param>
        <param name="channels">12</param>
        <paramlist name="ports">
            <elem name="FirstSetOfChannels">0 5 0 5</elem>
            <elem name="SecondSetOfChannels">6 11 0 5</elem>
        </paramlist>
        <group name="ROS">
            <param name="useROS">true</param>
            <param name="ROS_topicName">(/HDE/WrenchStamped/LeftFoot /HDE/WrenchStamped/RightFoot)</param>
            <param name="ROS_nodeName">/HDE/HumanWrenchPublisherNode</param>
            <param name="ROS_msgType">geometry_msgs/WrenchStamped</param>
            <param name="frame_id">(Human/LeftFoot Human/RightFoot)</param>
        </group>
        <action phase="startup" level="6" type="attach">
            <paramlist name="networks">
                <elem name="HumanWrenchPublisherLabel">HumanWrenchProvider</elem>
            </paramlist>
        </action>
        <action phase="shutdown" level="4" type="detach" />
    </device>

</robot>
